// 문제요약: 거스름돈을 줄 수 있는 경우의 수를 구하는 문제
// 알고리즘 선택: 
//  만약 1원 2원 두 종류의 화폐를 사용해서 3원을 만든다고 해보자
//  3원에서 1원을 빼면 1원이 남는다. 그럼 결국 1원으로 1원을 만드는 건데,
//  이건 이전의 1원으로 1, 2, 3, 4, 5원을 만드는 과정에서 구한 경우의 수를 가져다 쓸 수 있다
//  => DP

function solution(n, money) {
    
    const dp = Array.from({length: n + 1}, () => 0);
    dp[0] = 1;
    for (let m of money) {
        for (let i = m; i <= n; i++) {
            // 0원부터 5원까지 거스름돈 만들기
            dp[i] += dp[i - m];
        }
    }
    
    return dp[n];
}